---
- name: Bootstrap jailhost
  hosts: jailhost
  remote_user: '{{ fresh_install_user }}'
  become: true
  become_method: ansible.builtin.su
  gather_facts: false
  roles:
    - bootstrap

- name: Add all jails to ansible inventory
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/shared.yml
  tasks:
    - name: Generate IPv6 address for jail and add to ansible inventory
      ansible.builtin.add_host:
        name: '{{ item }}'
        groups: jails
        ansible_host: '{{ ula_prefix }}::eeee:{{ jail_idx + 1 }}'
      loop:
        - certauth
        - cifs
        - dns
        - irc
        - ircservices
        - kerberos
        - mail
        - prometheus
        - ssh
      loop_control:
        index_var: jail_idx

- name: Setup jailhost
  hosts: jailhost
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: true
  vars_files:
    - vars/shared.yml
  roles:
    - update_poudriere

      # TODO remove once everything is ready for production
    - setup_convenience_tools

    - setup_jailhost

- name: Bootstrap all jails
  hosts: jails
  strategy: free
  remote_user: root
  gather_facts: false
  roles:
    - bootstrap

- name: Reboot to refresh hostnames and FQDNs
  hosts: jailhost
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  tasks:
    - name: Reboot
      ansible.builtin.reboot:
        # TODO there must be a cleaner way of doing this, but for now, this works
        # NOTE this checks that ALL jails are active by checking the *number* of active jails
        # against our known number
        test_command: 'jls name | wc -l | xargs test {{ groups["jails"] | count }} ='

- name: Gather ansible facts and refresh /etc/hosts
  hosts: all
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: true
  vars_files:
    - vars/shared.yml
  roles:
    - refresh_etc_hosts

- name: Setup certauth jail
  hosts: certauth
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  roles:
    - setup_jail_certauth

- name: Generate host certs for each jail
  hosts: jails
  strategy: free
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  roles:
    - gen_host_cert

- name: Setup kerberos KDC
  hosts: kerberos
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  roles:
    - setup_jail_kerberos

- name: Move all keytabs to their respective hosts
  hosts: jailhost
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  tasks:
    - name: Copy jail keytabs from jailhost to jail
      ansible.builtin.copy:
        src: '/empt/jails/kerberos/tmp/{{ hostvars[item.host].ansible_fqdn }}.keytab'
        remote_src: true
        dest: '{{ item.keytab_dest }}'
        mode: '0600'
        owner: root
        group: wheel
      loop: '{{ kerberos_service_principals }}'

- name: Setup IRC services jail
  hosts: ircservices
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  roles:
    - setup_jail_ircservices

- name: Setup IRC server jail
  hosts: irc
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  roles:
    - setup_jail_irc

- name: Setup DNS server jail
  hosts: dns
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  roles:
    - setup_jail_dns

- name: Setup samba CIFS jail
  hosts: cifs
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  roles:
    - setup_jail_cifs

- name: Setup ssh jail
  hosts: ssh
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  roles:
    - setup_jail_ssh

- name: Setup mail server jail
  hosts: mail
  remote_user: ansible
  become: true
  become_method: community.general.doas
  gather_facts: false
  vars_files:
    - vars/shared.yml
  roles:
    - setup_jail_mail

- name: Create all pre-configured mailing lists
  hosts: mail
  remote_user: mlmmj
  gather_facts: false
  vars_files:
    - vars/shared.yml
  tasks:
    - name: Create mailing list
      ansible.builtin.include_tasks: mlmmj_make_ml.yml
      loop: '{{ mailing_lists }}'
      loop_control:
        loop_var: mailing_list

- name: Add all pre-configured humans
  hosts: jailhost
  remote_user: ansible
  gather_facts: false
  become: true
  become_method: community.general.doas
  vars_files:
    - vars/shared.yml
  tasks:
    - name: Add human
      ansible.builtin.include_role:
        name: new_human
      loop: '{{ humans }}'
      loop_control:
        loop_var: human

- name: Reboot after successful run
  hosts: jailhost
  remote_user: ansible
  gather_facts: false
  become: true
  become_method: community.general.doas
  tasks:
    - name: Reboot
      ansible.builtin.reboot:

