- name: Download FreeBSD base system archive to local filesystem
  ansible.builtin.get_url:
    url: 'https://download.freebsd.org/ftp/releases/amd64/{{ freebsd_version }}/base.txz'
    dest: /tmp/base.tar.xz
    owner: root
    group: wheel
    mode: '0600'

- name: Create base jail directory
  ansible.builtin.file:
    path: /tmp/base_jail
    state: directory
    mode: '0755'

- name: Unarchive base jail
  ansible.builtin.unarchive:
    src: /tmp/base.tar.xz
    remote_src: true
    dest: /tmp/base_jail

- name: Clone (thick) base jail to installed locations
  ansible.builtin.copy:
    src: /tmp/base_jail
    remote_src: true
    dest: '/usr/jail/guests/{{ item.name }}'
  loop: '{{ all_jails }}'

- name: Populate jail.conf
  ansible.builtin.template:
    src: jail.conf.j2
    dest: /etc/jail.conf
    owner: root
    group: wheel
    mode: '0644'

- name: Create the common fstabs
  ansible.builtin.template:
    src: common_fstab.j2
    dest: '/usr/jail/fstabs/{{ item.name }}'
    owner: root
    group: wheel
    mode: '0644'
  vars:
    jailname: '{{ item.name }}'
  loop: '{{ all_jails }}'

- name: Start all barebones jails
  ansible.builtin.service:
    name: jail
    state: started

- name: Add all jails to the inventory
  ansible.builtin.add_host:
    name: 'jail_{{ item.name }}'
    ansible_host: '{{ item.ipaddr }}'
    groups:
      - jails
  loop: '{{ all_jails }}'

- name: Prepare jails as much as possible using the host connection
  ansible.builtin.include_role:
    name: 'host_setup_jail_{{ item }}'
  # TODO uncomment once all jails are ready
  # loop: '{{ jail_list }}'
  vars:
    jailname: '{{ item }}'
  loop:
    - dns

- name: Stop all barebones jails
  ansible.builtin.service:
    name: jail
    state: stopped

#- name: debug
#  tags: test
#  ansible.builtin.debug:
#    msg: '{{ jailname }}'
#  vars:
#    jailname: '{{ item.name }}'
#  loop: '{{ all_jails }}'
