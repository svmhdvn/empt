- name: Create unlocked system user for running zfs replication commands on primary
  ansible.builtin.user:
    name: emptreplicator
    comment: EMPT ZFS Replication Agent
    shell: /usr/sbin/nologin
    home: /home/emptreplicator
    create_home: true
    generate_ssh_key: true
    ssh_key_type: ed25519
  delegate_to: jailhost-primary
  register: enable_automatic_replication_primary_user

- name: Create locked system user for running zfs replication commands on secondary
  ansible.builtin.user:
    name: emptreplicator
    comment: EMPT ZFS Replication Agent
    shell: /usr/sbin/nologin
    home: /home/emptreplicator
    create_home: true
    generate_ssh_key: true
    ssh_key_type: ed25519
    password_lock: true
  delegate_to: jailhost-secondary
  register: enable_automatic_replication_secondary_user

# TODO secure with SSH forced command
# ===================================
- name: Authorize primary replicator user public key on secondary
  ansible.posix.authorized_key:
    user: '{{ enable_automatic_replication_primary_user.name }}'
    key: '{{ enable_automatic_replication_primary_user.ssh_public_key }}'
  environment:
    CRYPTOGRAPHY_OPENSSL_NO_LEGACY: '1'
  delegate_to: jailhost-secondary

- name: Authorize secondary replicator user public key on primary
  ansible.posix.authorized_key:
    user: '{{ enable_automatic_replication_secondary_user.name }}'
    key: '{{ enable_automatic_replication_secondary_user.ssh_public_key }}'
  environment:
    CRYPTOGRAPHY_OPENSSL_NO_LEGACY: '1'
  delegate_to: jailhost-primary
# ===================================

- name: Retrieve secondary host public key
  ansible.builtin.command: ssh-keyscan -t ed25519 jailhost-secondary.home.arpa
  changed_when: false
  delegate_to: jailhost-primary
  register: enable_automatic_replication_secondary_host_key

- name: Add secondary host key to known_hosts
  ansible.builtin.known_hosts:
    name: jailhost-secondary.home.arpa
    key: '{{ item }}'
  delegate_to: jailhost-primary
  loop: '{{ enable_automatic_replication_secondary_host_key.stdout_lines | flatten(levels=1) }}'

- name: Retrieve primary host public key
  ansible.builtin.command: ssh-keyscan -t ed25519 jailhost-primary.home.arpa
  changed_when: false
  delegate_to: jailhost-secondary
  register: enable_automatic_replication_primary_host_key

- name: Add primary host key to known_hosts on secondary
  ansible.builtin.known_hosts:
    name: jailhost-primary.home.arpa
    key: '{{ item }}'
  loop: '{{ enable_automatic_replication_primary_host_key.stdout_lines | flatten(levels=1) }}'
  delegate_to: jailhost-secondary

# TODO turn this into a FreeBSD ports pkg
# =======================================
- name: Copy the replication script to the root directory
  ansible.builtin.copy:
    src: replication.sh
    dest: '{{ enable_automatic_replication_primary_user.home }}'
    mode: '0700'
    owner: '{{ enable_automatic_replication_primary_user.name }}'
    group: '{{ enable_automatic_replication_primary_user.name }}'
  delegate_to: '{{ item }}'
  loop: '{{ groups["jailhosts"] }}'
# =======================================

- name: Allow emptreplicator user to run any zfs commands needed for replication
  ansible.builtin.command: >
    zfs allow -u {{ enable_automatic_replication_primary_user.name }}
    create,destroy,hold,mount,mountpoint,quota,receive,reservation,send,snapshot
    zroot/empt/synced
  changed_when: true
  delegate_to: '{{ item }}'
  loop: '{{ groups["jailhosts"] }}'

- name: Ensure that the secondary is explicitly set as 'secondary'
  ansible.builtin.command: '{{ enable_automatic_replication_secondary_user.home }}/replication.sh failover'
  changed_when: true
  delegate_to: jailhost-secondary

- name: Initialize the replication configuration on the primary
  ansible.builtin.command: '{{ enable_automatic_replication_primary_user.home }}/replication.sh init jailhost-secondary.home.arpa'
  changed_when: true
  delegate_to: jailhost-primary

# TODO file ansible.builtin.cron bug to allow @<num> as a special_time value
- name: Setup automatic backup cronjobs
  ansible.builtin.lineinfile:
    path: '/var/cron/tabs/{{ enable_automatic_replication_primary_user.name }}'
    line: >
      @60 -n -q {{ enable_automatic_replication_primary_user.name }}/replication.sh backup
    create: true
    mode: '0600'
    owner: root
    group: wheel
  delegate_to: '{{ item }}'
  loop: '{{ groups["jailhosts"] }}'
