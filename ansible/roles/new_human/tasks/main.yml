# Expects variable:
# human:
#   username: str
#   fullname: str
#   uid: int
#   mailing_lists: [str]

- name: Create storage dataset for human
  community.general.zfs:
    name: 'zroot/empt/synced/rw/human:{{ human.username }}'
    state: present
    extra_zfs_properties:
      mountpoint: '/empt/synced/rw/humans/{{ human.username }}'
      quota: '1G'
      reservation: '1G'

- name: Populate human-owned storage directories
  ansible.builtin.file:
    name: '/empt/synced/rw/humans/{{ human.username }}/{{ item }}'
    state: directory
    mode: '0700'
    owner: '{{ human.uid }}'
    group: '{{ human.uid }}'
  loop:
    - home

- name: Create login-incapable unix accounts for the human in the required hosts
  ansible.builtin.user:
    name: '{{ human.username }}'
    comment: '{{ human.fullname }}'
    home: '/home/{{ human.username }}'
    create_home: false
    uid: '{{ human.uid }}'
    shell: /usr/sbin/nologin
  delegate_to: '{{ item }}'
  loop:
    # TODO do I need cifs here?
    - cifs
    - smtp
    - imap

- name: Create missing nullfs mountpoint for the home directory in cifs
  ansible.builtin.file:
    name: '/home/{{ human.username }}'
    state: directory
    mode: '0700'
    owner: '{{ human.uid }}'
    group: '{{ human.uid }}'
  delegate_to: cifs

- name: Add human home directory nullfs mount to cifs jail
  ansible.posix.mount:
    fstab: /empt/synced/rw/fstab.d/cifs.fstab
    src: '/empt/synced/rw/humans/{{ human.username }}/home'
    path: '/empt/jails/cifs/home/{{ human.username }}'
    fstype: nullfs
    opts: rw
    state: mounted

# TODO switch to MIT krb5
- name: Check which user principals are missing
  ansible.builtin.command: 'kadmin --local get --short {{ human.username }}'
  delegate_to: kerberos
  register: new_human_user_principal_exists
  failed_when: new_human_user_principal_exists.rc >= 2
  changed_when: false

- name: Add new kerberos principal
  ansible.builtin.command: 'kadmin --local add --password={{ human.username }} --use-defaults {{ human.username }}'
  delegate_to: kerberos
  when: '"Principal does not exist" in new_human_user_principal_exists.stderr'
  register: setup_jail_kerberos_add_user_principals_output
  changed_when: setup_jail_kerberos_add_user_principals_output.rc == 0

- name: Subscribe to selected mailing lists
  ansible.builtin.command: '/usr/local/bin/mlmmj-sub -L /var/spool/mlmmj/{{ item }} -a {{ human.username }}@{{ org_domain }} -c -f -s'
  loop: '{{ human.mailing_lists }}'
  delegate_to: smtp
  register: mlmmj_sub_output
  changed_when: mlmmj_sub_output.rc == 0
