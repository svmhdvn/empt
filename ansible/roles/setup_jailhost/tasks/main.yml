- name: Install jailhost required packages
  ansible.builtin.command: pkg install -y cpu-microcode nagios-plugins rsync zrep
  changed_when: true

# TODO query intel or AMD, currently hardcoding for wyse
- name: Enable early CPU microcode update at boot
  ansible.builtin.blockinfile:
    path: /boot/loader.conf
    block: |
      cpu_microcode_load="YES"
      cpu_microcode_name="/boot/firmware/amd-ucode.bin"

- name: Create ZFS top level dataset for empt
  community.general.zfs:
    name: zroot/empt
    state: present
    extra_zfs_properties:
      mountpoint: /empt

- name: Create dataset for backed-up etc files on the jailhost
  community.general.zfs:
    name: zroot/empt/etc
    state: present
    extra_zfs_properties:
      compression: zstd
  loop: '{{ groups["jails"] }}'

- name: Create top level ZFS dataset for storing data for humans
  community.general.zfs:
    name: zroot/empt/human_storage
    state: present
    extra_zfs_properties:
      exec: 'off'
      setuid: 'off'
      compression: zstd

- name: Create ZFS dataset for the top level jails filesystem
  community.general.zfs:
    name: zroot/empt/jails
    state: present

- name: Create parent dataset for each jail
  community.general.zfs:
    name: 'zroot/empt/jails/{{ item }}'
    state: present
  loop: '{{ groups["jails"] }}'

- name: Create dataset for backed-up etc files for each jail
  community.general.zfs:
    name: 'zroot/empt/jails/{{ item }}/etc'
    state: present
    extra_zfs_properties:
      compression: zstd
  loop: '{{ groups["jails"] }}'

- name: Create ZFS dataset for log storage inside each jail
  community.general.zfs:
    name: 'zroot/empt/jails/{{ item }}/logs'
    state: present
    extra_zfs_properties:
      mountpoint: '/empt/jails/{{ item }}/var/log'
      exec: 'off'
      setuid: 'off'
      compression: zstd
  loop: '{{ groups["jails"] }}'

- name: Create ZFS dataset for backed-up kerberos database storage
  community.general.zfs:
    name: zroot/empt/jails/kerberos/krb5data
    state: present
    extra_zfs_properties:
      mountpoint: /empt/jails/kerberos/var/heimdal
      exec: 'off'
      setuid: 'off'

# TODO audit file permissions one by one
- name: Populate jailhost /etc files
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/etc/{{ item.path | replace(".j2", "") }}'
    mode: '0644'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/jailhost_etc/" }}'
  when: item.state == 'file'

- name: Populate jailhost /usr/local/etc files
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/usr/local/etc/{{ item.path | replace(".j2", "") }}'
    mode: '0644'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/jailhost_usr_local_etc/" }}'
  when: item.state == 'file'

- name: Create missing /empt/etc subdirectories
  ansible.builtin.file:
    path: '/empt/etc/{{ item.path }}'
    state: directory
    mode: '0700'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/empt_etc" }}'
  when: item.state == 'directory'

- name: Configure EMPT backed-up jail-specific etc files
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/empt/etc/{{ item.path | replace(".j2", "") }}'
    mode: '0600'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/empt_etc" }}'
  when: item.state == 'file'

- name: Create empty directory for base jail
  ansible.builtin.file:
    path: /tmp/base_jail
    state: directory
    mode: '0755'
    owner: root
    group: wheel

- name: Install pkgbase to temporary base jail
  ansible.builtin.command: pkg --rootdir /tmp/base_jail install -y --repository PoudrierePkgbase -g 'FreeBSD-*'
  changed_when: true

- name: Create all missing directories in base jail
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  loop:
    - /tmp/base_jail/home
    - /tmp/base_jail/usr/local/etc/pkg/repos
    - /tmp/base_jail/usr/local/poudriere_repos
    - /tmp/base_jail/root/.ssh

- name: Populate common /etc files into base jail
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/tmp/base_jail/etc/{{ item.path | replace(".j2", "") }}'
    mode: '0644'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/common_etc/" }}'
  when: item.state == 'file'

- name: Copy pkg repo config to base jail
  ansible.builtin.copy:
    src: /usr/local/etc/pkg/repos/FreeBSD.conf
    remote_src: true
    dest: /tmp/base_jail/usr/local/etc/pkg/repos/
    mode: '0644'
    owner: root
    group: wheel

- name: Clone (thick) base jail to installed locations
  ansible.builtin.command: 'cp -a /tmp/base_jail/ /empt/jails/{{ item }}'
  loop: '{{ groups["jails"] }}'
  changed_when: true

# NOTE needed to clear immutable flags
- name: Clear all flags in temporary base jail tree
  ansible.builtin.command: chflags -R 0 /tmp/base_jail
  changed_when: true

- name: Remove temporary base jail
  ansible.builtin.file:
    path: /tmp/base_jail
    state: absent

# TODO no idea why this needs to be broken into two steps
# - name: Enable jail service
#   ansible.builtin.service:
#     name: "jail"
#     enabled: true
#     state: started
