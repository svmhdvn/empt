- name: Install jailhost required packages
  ansible.builtin.command: pkg install -y cpu-microcode rsync fdm py311-cryptography empt-scripts
  changed_when: true

# TODO query intel or AMD, currently hardcoding for wyse
- name: Enable early CPU microcode update at boot
  ansible.builtin.blockinfile:
    path: /boot/loader.conf
    create: true
    block: |
      cpu_microcode_load="YES"
      cpu_microcode_name="/boot/firmware/amd-ucode.bin"

# TODO audit file permissions one by one
- name: Populate jailhost /etc files
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/etc/{{ item.path | replace(".j2", "") }}'
    mode: '0644'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/jailhost_etc/" }}'
  when: item.state == 'file'

- name: Create empty directory for base jail
  ansible.builtin.file:
    path: /tmp/base_jail
    state: directory
    mode: '0755'
    owner: root
    group: wheel

- name: Install pkgbase to temporary base jail
  ansible.builtin.command: pkg -r /tmp/base_jail install -y -r jail_pkgbase -g 'FreeBSD-*'
  changed_when: true

- name: Install basic dependencies for ansible builtin modules to base jail
  ansible.builtin.command: pkg -r /tmp/base_jail install -y -r ports python doas gtar unzip tree py311-cryptography
  changed_when: true

# TODO remove once done
- name: Temporarily setup doas.conf for :wheel
  ansible.builtin.lineinfile:
    line: permit nopass :wheel
    path: /tmp/base_jail/usr/local/etc/doas.conf
    create: true
    owner: root
    group: wheel
    mode: '0600'

- name: Create all missing directories in base jail
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  loop:
    - /tmp/base_jail/home
    # TODO don't use root for ssh between systems
    - /tmp/base_jail/root/.ssh

- name: Populate common /etc files into base jail
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/tmp/base_jail/etc/{{ item.path | replace(".j2", "") }}'
    mode: '0644'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/common_etc/" }}'
  when: item.state == 'file'

- name: Create top level dataset for empt
  community.general.zfs:
    name: zroot/empt
    state: present
    extra_zfs_properties:
      mountpoint: /empt

- name: Create dataset for all synced (replicated with backup) data
  community.general.zfs:
    name: zroot/empt/synced
    state: present

- name: Create synced dataset for non-executable compressed data
  community.general.zfs:
    name: zroot/empt/synced/rw
    state: present
    extra_zfs_properties: '{{ zrep_synced_dataset_properties["zroot/empt/synced/rw"] }}'

- name: Populate rough EMPT directory layout
  ansible.builtin.file:
    path: '/empt/{{ item }}'
    state: directory
    mode: '0700'
    owner: root
    group: wheel
  loop:
    - jails
    - synced/rw/fstab.d
    - synced/rw/groups
    - synced/rw/humans
    - synced/rw/jail.conf.d
    - synced/rw/krb5data
    - synced/rw/logs
    - synced/rw/mlmmj_spool
    - synced/rw/cyrusimap/db
    - synced/rw/cyrusimap/spool

- name: Prepare directories for jail nullfs-mounted etc
  ansible.builtin.file:
    path: '/empt/synced/etc/{{ item }}'
    state: directory
    mode: '0700'
    owner: root
    group: wheel
  loop: '{{ groups["jails"] }}'

- name: Install all jail.conf files
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/empt/synced/rw/jail.conf.d/{{ item.path | replace(".j2", "") }}'
    mode: '0600'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/jail.conf.d" }}'
  when: item.state == 'file'

- name: Create an empty fstab for every jail
  ansible.builtin.file:
    path: '/empt/synced/rw/fstab.d/{{ item }}.fstab'
    state: touch
    mode: '0600'
    owner: root
    group: wheel
  loop: '{{ groups["jails"] }}'

# TODO add WITHOUT_* knobs upstream for some of these useless things
# - name: Remove unnecessary /etc files in the base jail
#   ansible.builtin.file:
#     path: '/tmp/base_jail/etc/{{ item }}'

- name: Copy base jail /etc to synced jail etc directory under EMPT
  # NOTE the trailing slash on /tmp/base_jail/etc/ is required to copy its contents
  # rather than the entire directory. See cp(1).
  ansible.builtin.command: 'cp -a /tmp/base_jail/etc/ /empt/synced/etc/{{ item }}'
  loop: '{{ groups["jails"] }}'
  changed_when: true

# TODO is there really no way to simply "truncate" a directory?
# =============================================================
- name: Remove /etc from base jail
  ansible.builtin.file:
    path: /tmp/base_jail/etc
    state: absent

- name: Create empty /etc nullfs mountpoint in base jail
  ansible.builtin.file:
    path: /tmp/base_jail/etc
    state: directory
# =============================================================

- name: Clone (thick) base jail to installed locations
  # NOTE the trailing slash on /tmp/base_jail/ is required to copy its contents
  # rather than the entire directory. See cp(1).
  ansible.builtin.command: 'cp -a /tmp/base_jail/ /empt/jails/{{ item }}'
  loop: '{{ groups["jails"] }}'
  changed_when: true

- name: Mount all etc directories to their respective jails
  ansible.builtin.command: mount -al
  changed_when: true

# NOTE needed to clear immutable flags
- name: Clear all flags in temporary base jail tree
  ansible.builtin.command: chflags -R 0 /tmp/base_jail
  changed_when: true

- name: Remove temporary base jail
  ansible.builtin.file:
    path: /tmp/base_jail
    state: absent
