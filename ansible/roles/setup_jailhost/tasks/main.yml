- name: "Install jailhost required packages"
  ansible.builtin.command: pkg install -y cpu-microcode dhcpcd nagios-plugins heimdal-devel
  changed_when: true

# TODO query intel or AMD, currently hardcoding for wyse
- name: Enable early CPU microcode update at boot
  ansible.builtin.blockinfile:
    path: /boot/loader.conf
    block: |
      cpu_microcode_load="YES"
      cpu_microcode_name="/boot/firmware/amd-ucode.bin"

- name: "Create ZFS top level dataset for empt"
  community.general.zfs:
    name: "zroot/empt"
    state: present
    extra_zfs_properties:
      mountpoint: '/empt'

- name: "Create ZFS dataset for EMPT miscellaneous configuration files"
  community.general.zfs:
    name: "zroot/empt/etc"
    state: present
    extra_zfs_properties:
      compression: 'zstd'
      exec: 'off'
      setuid: 'off'

- name: "Create ZFS dataset for the top level jails filesystem"
  community.general.zfs:
    name: "zroot/empt/jails"
    state: present
    extra_zfs_properties:
      # TODO benchmark lz4 vs zstd
      compression: 'lz4'

- name: "Create ZFS dataset for log storage"
  community.general.zfs:
    name: "zroot/empt/logs"
    state: present
    extra_zfs_properties:
      atime: 'off'
      compression: 'zstd'
      exec: 'off'
      setuid: 'off'

- name: Create empty syslog files for each jail
  ansible.builtin.file:
    path: '/empt/logs/{{ item }}.syslog.log'
    state: touch
    mode: '0700'
    owner: root
    group: wheel
  loop: '{{ groups["jails"] }}'

- name: "Create top level ZFS dataset for storing data for humans"
  community.general.zfs:
    name: "zroot/empt/human_storage"
    state: present
    extra_zfs_properties:
      canmount: 'off'
      compression: 'zstd'
      exec: 'off'
      setuid: 'off'

- name: "Create all missing directories on jailhost"
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  loop:
    - /empt/etc/jail_fstabs
    - /tmp/base_jail

# TODO audit file permissions one by one
- name: "Populate jailhost /etc files"
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/etc/{{ item.path | replace(".j2", "") }}'
    mode: '0644'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/jailhost_etc/" }}'
  when: item.state == 'file'

- name: "Populate jailhost /usr/local/etc files"
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/usr/local/etc/{{ item.path | replace(".j2", "") }}'
    mode: '0644'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/jailhost_usr_local_etc/" }}'
  when: item.state == 'file'

- name: Create missing jail.conf.d directory
  ansible.builtin.file:
    path: /empt/etc/jail.conf.d
    state: directory
    mode: '0700'
    owner: root
    group: wheel

- name: Configure individual jails
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/empt/etc/jail.conf.d/{{ item.path | replace(".j2", "") }}'
    mode: '0600'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/jail.conf.d" }}'
  when: item.state == 'file'

- name: "Unarchive (thick) base jail to temporary location"
  ansible.builtin.unarchive:
    src: wyse-base.txz
    dest: /tmp/base_jail

- name: "Create all missing directories in base jail"
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  loop:
    - /tmp/base_jail/home
    - /tmp/base_jail/usr/local/etc/pkg/repos
    - /tmp/base_jail/usr/local/poudriere_repos
    - /tmp/base_jail/root/.ssh

- name: Create empty syslog nullfs mount file in base jail
  ansible.builtin.file:
    path: /tmp/base_jail/var/log/syslog.log
    state: touch
    mode: '0700'
    owner: root
    group: wheel

- name: Populate common /etc files into base jail
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/tmp/base_jail/etc/{{ item.path | replace(".j2", "") }}'
    mode: '0644'
    owner: root
    group: wheel
  with_community.general.filetree: '{{ "templates/common_etc/" }}'
  when: item.state == 'file'

- name: Copy pkg repo config to base jail
  ansible.builtin.copy:
    src: /usr/local/etc/pkg/repos/FreeBSD.conf
    remote_src: true
    dest: /tmp/base_jail/usr/local/etc/pkg/repos/
    mode: '0644'
    owner: root
    group: wheel

- name: Clone (thick) base jail to installed locations
  ansible.builtin.command: 'cp -a /tmp/base_jail /empt/jails/{{ item }}'
  loop: '{{ groups["jails"] }}'
  changed_when: true

- name: Remove temporary base jail
  ansible.builtin.file:
    path: /tmp/base_jail
    state: absent

- name: Copy the common fstab for each jail
  ansible.builtin.template:
    src: 'jail_fstabs/{{ item }}.fstab'
    dest: '/empt/etc/jail_fstabs/{{ item }}.fstab'
    owner: root
    group: wheel
    mode: '0644'
  loop: '{{ groups["jails"] }}'

# TODO no idea why this needs to be broken into two steps
- name: Enable jail service
  ansible.builtin.service:
    name: "jail"
    enabled: true
    state: started

# TODO file bug for service module not working here
- name: Start all jails
  ansible.builtin.command: service jail restart # noqa: command-instead-of-module
  changed_when: false
